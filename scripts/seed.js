const { MongoClient } = require("mongodb");
require("dotenv").config();

const MONGODB_URI = process.env.MONGODB_URI;
const DB_NAME = process.env.DB_NAME || "laptopsun";

if (!MONGODB_URI) {
  console.error("‚ùå MONGODB_URI environment variable is not set");
  process.exit(1);
}

// Sample data with multilingual support
const seedData = {
  services: [
    {
      name: {
        vi: "S·ª≠a m√†n h√¨nh Macbook",
        en: "Macbook Screen Repair",
      },
      description: {
        vi: "Thay th·∫ø m√†n h√¨nh Macbook b·ªã v·ª°, n·ª©t ho·∫∑c kh√¥ng hi·ªÉn th·ªã. S·ª≠ d·ª•ng linh ki·ªán ch√≠nh h√£ng.",
        en: "Replace broken, cracked or non-displaying Macbook screens. Using genuine parts.",
      },
      price: 2500000,
      estimatedTime: "2-3 gi·ªù",
      category: "macbook",
      isActive: true,
    },
    {
      name: {
        vi: "Thay pin Macbook",
        en: "Macbook Battery Replacement",
      },
      description: {
        vi: "Thay pin Macbook chai, ph·ªìng ho·∫∑c kh√¥ng s·∫°c ƒë∆∞·ª£c. B·∫£o h√†nh 6 th√°ng.",
        en: "Replace degraded, swollen or non-charging Macbook batteries. 6-month warranty.",
      },
      price: 1800000,
      estimatedTime: "1-2 gi·ªù",
      category: "macbook",
      isActive: true,
    },
    {
      name: {
        vi: "S·ª≠a b√†n ph√≠m laptop",
        en: "Laptop Keyboard Repair",
      },
      description: {
        vi: "S·ª≠a ch·ªØa b√†n ph√≠m laptop b·ªã li·ªát ph√≠m, d√≠nh ph√≠m ho·∫∑c kh√¥ng nh·∫≠n ph√≠m.",
        en: "Fix laptop keyboards with stuck keys, dead keys or unresponsive keys.",
      },
      price: 800000,
      estimatedTime: "1 gi·ªù",
      category: "laptop",
      isActive: true,
    },
    {
      name: {
        vi: "Kh√¥i ph·ª•c d·ªØ li·ªáu",
        en: "Data Recovery",
      },
      description: {
        vi: "Kh√¥i ph·ª•c d·ªØ li·ªáu t·ª´ ·ªï c·ª©ng b·ªã h·ªèng, format nh·∫ßm ho·∫∑c virus.",
        en: "Recover data from damaged hard drives, accidental formatting or virus attacks.",
      },
      price: 1500000,
      estimatedTime: "1-3 ng√†y",
      category: "data",
      isActive: true,
    },
    {
      name: {
        vi: "V·ªá sinh laptop chuy√™n s√¢u",
        en: "Deep Laptop Cleaning",
      },
      description: {
        vi: "V·ªá sinh to√†n b·ªô laptop, thay keo t·∫£n nhi·ªát, l√†m s·∫°ch qu·∫°t t·∫£n nhi·ªát.",
        en: "Complete laptop cleaning, thermal paste replacement, fan cleaning.",
      },
      price: 500000,
      estimatedTime: "2-3 gi·ªù",
      category: "laptop",
      isActive: true,
    },
  ],

  faqs: [
    {
      question: {
        vi: "Th·ªùi gian s·ª≠a ch·ªØa m·∫•t bao l√¢u?",
        en: "How long does repair take?",
      },
      answer: {
        vi: "Th·ªùi gian s·ª≠a ch·ªØa ph·ª• thu·ªôc v√†o lo·∫°i s·ª± c·ªë. H·∫ßu h·∫øt c√°c tr∆∞·ªùng h·ª£p ƒë∆°n gi·∫£n c√≥ th·ªÉ ho√†n th√†nh trong ng√†y. C√°c tr∆∞·ªùng h·ª£p ph·ª©c t·∫°p c√≥ th·ªÉ m·∫•t 2-5 ng√†y l√†m vi·ªác.",
        en: "Repair time depends on the type of issue. Most simple cases can be completed same-day. Complex cases may take 2-5 business days.",
      },
      category: "general",
      order: 1,
      isActive: true,
    },
    {
      question: {
        vi: "C√≥ b·∫£o h√†nh sau khi s·ª≠a ch·ªØa kh√¥ng?",
        en: "Is there warranty after repair?",
      },
      answer: {
        vi: "C√≥, ch√∫ng t√¥i cung c·∫•p b·∫£o h√†nh 3-6 th√°ng cho t·∫•t c·∫£ d·ªãch v·ª• s·ª≠a ch·ªØa t√πy theo lo·∫°i d·ªãch v·ª•. B·∫£o h√†nh bao g·ªìm c·∫£ linh ki·ªán v√† c√¥ng s·ª≠a ch·ªØa.",
        en: "Yes, we provide 3-6 months warranty for all repair services depending on the service type. Warranty covers both parts and labor.",
      },
      category: "warranty",
      order: 2,
      isActive: true,
    },
    {
      question: {
        vi: "C√≥ s·ª≠a ch·ªØa t·∫°i nh√† kh√¥ng?",
        en: "Do you provide home service?",
      },
      answer: {
        vi: "Hi·ªán t·∫°i ch√∫ng t√¥i ch·ªâ nh·∫≠n s·ª≠a ch·ªØa t·∫°i c·ª≠a h√†ng ƒë·ªÉ ƒë·∫£m b·∫£o ch·∫•t l∆∞·ª£ng d·ªãch v·ª• t·ªët nh·∫•t. Tuy nhi√™n, ch√∫ng t√¥i c√≥ d·ªãch v·ª• ƒë·∫øn l·∫•y v√† giao m√°y t·∫≠n n∆°i.",
        en: "Currently we only accept repairs at our store to ensure the best service quality. However, we offer pickup and delivery service.",
      },
      category: "service",
      order: 3,
      isActive: true,
    },
    {
      question: {
        vi: "Gi√° s·ª≠a ch·ªØa nh∆∞ th·∫ø n√†o?",
        en: "How much does repair cost?",
      },
      answer: {
        vi: "Gi√° s·ª≠a ch·ªØa ph·ª• thu·ªôc v√†o lo·∫°i s·ª± c·ªë v√† linh ki·ªán c·∫ßn thay. Ch√∫ng t√¥i s·∫Ω b√°o gi√° chi ti·∫øt sau khi ki·ªÉm tra m√°y. Kh√¥ng s·ª≠a ƒë∆∞·ª£c th√¨ kh√¥ng t√≠nh ph√≠ ki·ªÉm tra.",
        en: "Repair cost depends on the type of issue and parts needed. We provide detailed quote after diagnosis. No fix, no diagnostic fee.",
      },
      category: "pricing",
      order: 4,
      isActive: true,
    },
  ],

  testimonials: [
    {
      customerName: "Nguy·ªÖn VƒÉn An",
      customerTitle: "K·ªπ s∆∞ ph·∫ßn m·ªÅm",
      content: {
        vi: "Macbook c·ªßa t√¥i b·ªã v·ª° m√†n h√¨nh, ƒëem ƒë·∫øn LaptopSun s·ª≠a r·∫•t nhanh v√† ch·∫•t l∆∞·ª£ng. Gi√° c·∫£ h·ª£p l√Ω, nh√¢n vi√™n t∆∞ v·∫•n nhi·ªát t√¨nh.",
        en: "My Macbook screen was broken, brought it to LaptopSun for quick and quality repair. Reasonable price, enthusiastic staff consultation.",
      },
      rating: 5,
      isPublished: true,
      publishedAt: new Date(),
    },
    {
      customerName: "Tr·∫ßn Th·ªã B√¨nh",
      customerTitle: "Sinh vi√™n",
      content: {
        vi: "Laptop c·ªßa em b·ªã ch·∫≠m, ƒëem ƒë·∫øn ƒë√¢y v·ªá sinh v√† n√¢ng c·∫•p RAM. Gi·ªù ch·∫°y r·∫•t m∆∞·ª£t, c·∫£m ∆°n anh ch·ªã nhi·ªÅu!",
        en: "My laptop was slow, brought it here for cleaning and RAM upgrade. Now it runs very smoothly, thank you so much!",
      },
      rating: 5,
      isPublished: true,
      publishedAt: new Date(),
    },
    {
      customerName: "L√™ Minh C∆∞·ªùng",
      customerTitle: "Doanh nh√¢n",
      content: {
        vi: "D·ªãch v·ª• kh√¥i ph·ª•c d·ªØ li·ªáu r·∫•t t·ªët. ·ªî c·ª©ng c·ªßa t√¥i b·ªã h·ªèng nh∆∞ng v·∫´n l·∫•y l·∫°i ƒë∆∞·ª£c h·∫øt d·ªØ li·ªáu quan tr·ªçng.",
        en: "Data recovery service is excellent. My hard drive was damaged but they recovered all important data.",
      },
      rating: 5,
      isPublished: true,
      publishedAt: new Date(),
    },
  ],

  blogPosts: [
    {
      title: {
        vi: "5 c√°ch b·∫£o v·ªá laptop kh·ªèi virus",
        en: "5 ways to protect your laptop from viruses",
      },
      slug: "5-cach-bao-ve-laptop-khoi-virus",
      content: {
        vi: "Virus m√°y t√≠nh l√† m·ªëi ƒëe d·ªça th∆∞·ªùng xuy√™n ƒë·ªëi v·ªõi ng∆∞·ªùi d√πng laptop. D∆∞·ªõi ƒë√¢y l√† 5 c√°ch hi·ªáu qu·∫£ ƒë·ªÉ b·∫£o v·ªá laptop c·ªßa b·∫°n...",
        en: "Computer viruses are a constant threat to laptop users. Here are 5 effective ways to protect your laptop...",
      },
      excerpt: {
        vi: "H∆∞·ªõng d·∫´n chi ti·∫øt c√°ch b·∫£o v·ªá laptop kh·ªèi virus v√† malware hi·ªáu qu·∫£ nh·∫•t.",
        en: "Detailed guide on how to protect your laptop from viruses and malware most effectively.",
      },
      tags: ["b·∫£o m·∫≠t", "virus", "laptop", "security", "antivirus"],
      isPublished: true,
      publishedAt: new Date(),
      author: null, // Will be set to admin user ID after user creation
    },
    {
      title: {
        vi: "C√°ch v·ªá sinh laptop ƒë√∫ng c√°ch",
        en: "How to clean your laptop properly",
      },
      slug: "cach-ve-sinh-laptop-dung-cach",
      content: {
        vi: "V·ªá sinh laptop ƒë·ªãnh k·ª≥ gi√∫p m√°y ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh v√† k√©o d√†i tu·ªïi th·ªç. B√†i vi·∫øt n√†y s·∫Ω h∆∞·ªõng d·∫´n b·∫°n c√°ch v·ªá sinh laptop an to√†n...",
        en: "Regular laptop cleaning helps the machine operate stably and extends its lifespan. This article will guide you on how to clean your laptop safely...",
      },
      excerpt: {
        vi: "H∆∞·ªõng d·∫´n t·ª´ng b∆∞·ªõc c√°ch v·ªá sinh laptop an to√†n t·∫°i nh√†.",
        en: "Step-by-step guide on how to safely clean your laptop at home.",
      },
      tags: ["v·ªá sinh", "b·∫£o d∆∞·ª°ng", "laptop", "cleaning", "maintenance"],
      isPublished: true,
      publishedAt: new Date(),
      author: null,
    },
  ],
};

async function seedDatabase() {
  const client = new MongoClient(MONGODB_URI);

  try {
    console.log("üîå Connecting to MongoDB...");
    await client.connect();
    console.log("‚úÖ Connected to MongoDB");

    const db = client.db(DB_NAME);

    // Create admin user first
    console.log("üë§ Creating admin user...");
    const bcrypt = require("bcryptjs");
    const hashedPassword = await bcrypt.hash("admin123", 12);

    const adminUser = {
      name: "Administrator",
      email: "admin@laptopsun.com",
      password: hashedPassword,
      role: "admin",
      phone: "0857270270",
      createdAt: new Date(),
      updatedAt: new Date(),
    };

    const usersCollection = db.collection("users");
    const existingAdmin = await usersCollection.findOne({
      email: adminUser.email,
    });

    let adminId;
    if (!existingAdmin) {
      const result = await usersCollection.insertOne(adminUser);
      adminId = result.insertedId;
      console.log("‚úÖ Admin user created");
    } else {
      adminId = existingAdmin._id;
      console.log("‚ÑπÔ∏è  Admin user already exists");
    }

    // Seed Services
    console.log("üõ†Ô∏è  Seeding services...");
    const servicesCollection = db.collection("services");
    await servicesCollection.deleteMany({}); // Clear existing

    const servicesWithTimestamp = seedData.services.map((service) => ({
      ...service,
      createdAt: new Date(),
      updatedAt: new Date(),
    }));

    await servicesCollection.insertMany(servicesWithTimestamp);
    console.log(`‚úÖ Inserted ${servicesWithTimestamp.length} services`);

    // Seed FAQs
    console.log("‚ùì Seeding FAQs...");
    const faqsCollection = db.collection("faqs");
    await faqsCollection.deleteMany({}); // Clear existing

    const faqsWithTimestamp = seedData.faqs.map((faq) => ({
      ...faq,
      createdAt: new Date(),
      updatedAt: new Date(),
    }));

    await faqsCollection.insertMany(faqsWithTimestamp);
    console.log(`‚úÖ Inserted ${faqsWithTimestamp.length} FAQs`);

    // Seed Testimonials
    console.log("üí¨ Seeding testimonials...");
    const testimonialsCollection = db.collection("testimonials");
    await testimonialsCollection.deleteMany({}); // Clear existing

    const testimonialsWithTimestamp = seedData.testimonials.map(
      (testimonial) => ({
        ...testimonial,
        createdAt: new Date(),
        updatedAt: new Date(),
      })
    );

    await testimonialsCollection.insertMany(testimonialsWithTimestamp);
    console.log(`‚úÖ Inserted ${testimonialsWithTimestamp.length} testimonials`);

    // Seed Blog Posts
    console.log("üìù Seeding blog posts...");
    const blogPostsCollection = db.collection("blogposts");
    await blogPostsCollection.deleteMany({}); // Clear existing

    const blogPostsWithTimestamp = seedData.blogPosts.map((post) => ({
      ...post,
      author: adminId,
      createdAt: new Date(),
      updatedAt: new Date(),
    }));

    await blogPostsCollection.insertMany(blogPostsWithTimestamp);
    console.log(`‚úÖ Inserted ${blogPostsWithTimestamp.length} blog posts`);

    console.log("üéâ Database seeding completed successfully!");
    console.log("\nüìä Summary:");
    console.log(`- Services: ${seedData.services.length}`);
    console.log(`- FAQs: ${seedData.faqs.length}`);
    console.log(`- Testimonials: ${seedData.testimonials.length}`);
    console.log(`- Blog Posts: ${seedData.blogPosts.length}`);
    console.log(`- Admin User: admin@laptopsun.com / admin123`);
  } catch (error) {
    console.error("‚ùå Error seeding database:", error);
    process.exit(1);
  } finally {
    await client.close();
    console.log("üîå MongoDB connection closed");
  }
}

// Run the seed function
if (require.main === module) {
  seedDatabase();
}

module.exports = { seedData, seedDatabase };
